package com.design;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import com.design.creational.builder.User;
import com.design.creational.builder.UserBuilder;
import com.design.creational.factory.Car;
import com.design.creational.factory.CarFactory;
import com.design.creational.factory.CarType;
import com.design.creational.prototype.Models.Movie;
import com.design.creational.prototype.PrototypeCapable;
import com.design.creational.prototype.PrototypeFactory;
import com.design.creational.prototype.PrototypeFactory.ModelType;

public class Main {
	
	private static List<Integer> list1 = new ArrayList<>();
    static long startTime;
    static long endTime;
   static
   {
       for(int i=0; i < 40000000; i++)
       {
           list1.add(i);
       }
   }
	
  
 public static void main(String[] args) {
	
	 
	
	 startTime = Calendar.getInstance().getTimeInMillis();
     for(Integer i : list1)
     {
         
     }
     endTime = Calendar.getInstance().getTimeInMillis();
     System.out.println("foreach =>" + (endTime - startTime));
	/* ######### Builder Design Pattern ########## */
     int size = list1.size();
     startTime = Calendar.getInstance().getTimeInMillis();
     for(int j = size; j > size ; j--)
     {
         // System.out.println(j);
     }
     endTime = Calendar.getInstance().getTimeInMillis();
     System.out.println("int j = list.size();" + (endTime - startTime));
     
     
     startTime = Calendar.getInstance().getTimeInMillis();
     for(int j = 0; j < list1.size() ; j++)
     {
    	 // System.out.println(j);
     }
     endTime = Calendar.getInstance().getTimeInMillis();
     System.out.println("Using collection.size() :: " + (endTime - startTime) + " m");

     
	User ub = new UserBuilder("pawan","sankhle")
	.email("pawan@gmail.com")
	.id(1).build();
	
	
	
	/* ######### prototype Design Pattern ########## */
	PrototypeFactory factory = new PrototypeFactory();
	try {
		PrototypeCapable movie = factory.getInstance(ModelType.MOVIE);
		Movie m = (Movie) movie;
		m.setName("akber");
		System.err.println("movie => " + m);
	} catch (CloneNotSupportedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
	/* ##########Factory Design Pattern############# */
	Car small = CarFactory.buildCar(CarType.SMALL);
	Car sedan = CarFactory.buildCar(CarType.SEDAN);
	Car luxury = CarFactory.buildCar(CarType.LUXURY);
	
	// System.out.println(small + " " + sedan + " " + luxury);
	
	/* ########## Abstract Factory Design Pattern############# */
	
	com.design.creational.abstractfactory.Car small1 = com.design.creational.abstractfactory.CarFactory.buildCar(CarType.SMALL);
	
	
	
	
 }
}
